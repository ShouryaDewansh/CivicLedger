{
  "info": {
    "name": "CivicLedger API",
    "description": "Privacy-preserving, verifiable petition/voting system using Merkle trees",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:4000/api",
      "type": "string"
    },
    {
      "key": "pollId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "System",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "Check server health and uptime"
          },
          "response": []
        },
        {
          "name": "Get Server Public Key",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/server-public-key",
              "host": ["{{baseUrl}}"],
              "path": ["server-public-key"]
            },
            "description": "Retrieve the server's Ed25519 public key for signature verification"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Polls",
      "item": [
        {
          "name": "Create Poll",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('pollId', response.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"{{$randomUUID}}\",\n  \"title\": \"Favorite Programming Language\",\n  \"options\": [\n    \"JavaScript\",\n    \"Python\",\n    \"Rust\",\n    \"Go\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/polls",
              "host": ["{{baseUrl}}"],
              "path": ["polls"]
            },
            "description": "Create a new poll with unique ID and options"
          },
          "response": []
        },
        {
          "name": "Get Poll",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/polls/{{pollId}}",
              "host": ["{{baseUrl}}"],
              "path": ["polls", "{{pollId}}"]
            },
            "description": "Get poll details including vote count"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Votes",
      "item": [
        {
          "name": "Cast Vote",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "const crypto = require('crypto');",
                  "",
                  "// Generate a random vote commitment (SHA-256 hash)",
                  "const commitment = crypto.randomBytes(32).toString('hex');",
                  "const leaf = crypto.createHash('sha256').update(commitment).digest('hex');",
                  "",
                  "pm.variables.set('voteLeaf', leaf);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"leaf\": \"{{voteLeaf}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/{{pollId}}/vote",
              "host": ["{{baseUrl}}"],
              "path": ["{{pollId}}", "vote"]
            },
            "description": "Cast a vote and receive an inclusion receipt with Merkle proof"
          },
          "response": []
        },
        {
          "name": "Cast Vote (Example 1)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"leaf\": \"a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/{{pollId}}/vote",
              "host": ["{{baseUrl}}"],
              "path": ["{{pollId}}", "vote"]
            },
            "description": "Example vote with hardcoded leaf hash"
          },
          "response": []
        },
        {
          "name": "Cast Vote (Example 2)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"leaf\": \"b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/{{pollId}}/vote",
              "host": ["{{baseUrl}}"],
              "path": ["{{pollId}}", "vote"]
            },
            "description": "Example vote with different leaf hash"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Snapshots",
      "item": [
        {
          "name": "Create Snapshot",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/polls/{{pollId}}/snapshot",
              "host": ["{{baseUrl}}"],
              "path": ["polls", "{{pollId}}", "snapshot"]
            },
            "description": "Create a signed snapshot of all votes (optionally pins to IPFS)"
          },
          "response": []
        },
        {
          "name": "List Snapshots",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/polls/{{pollId}}/snapshots",
              "host": ["{{baseUrl}}"],
              "path": ["polls", "{{pollId}}", "snapshots"]
            },
            "description": "List all snapshots for a poll"
          },
          "response": []
        }
      ]
    }
  ]
}

